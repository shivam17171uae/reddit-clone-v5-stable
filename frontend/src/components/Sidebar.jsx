import React, { useState, useEffect } from 'react'; import { useAuth } from '../context/AuthContext'; import { Link } from 'react-router-dom';
const CreateCommunity = ({ onCommunityCreated }) => { const [name, setName] = useState(''); const [error, setError] = useState(''); const { token } = useAuth(); const handleSubmit = async (e) => { e.preventDefault(); setError(''); try { const res = await fetch('/api/communities', { method: 'POST', headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` }, body: JSON.stringify({ name }), }); if (!res.ok) throw new Error(await res.text()); setName(''); onCommunityCreated(); } catch (err) { setError(err.message); } }; return ( <div className="bg-gray-800 p-4 rounded-lg"> <h3 className="font-bold text-white mb-2">Create a Community</h3> {error && <p className="text-red-400 text-sm mb-2">{error}</p>} <form onSubmit={handleSubmit}> <input type="text" placeholder="Community Name" value={name} onChange={(e) => setName(e.target.value)} className="w-full bg-gray-700 p-2 rounded mb-2" /> <button type="submit" className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Create</button> </form> </div> );};
function Sidebar() { const [communities, setCommunities] = useState([]); const { user } = useAuth(); const fetchCommunities = async () => { try { const res = await fetch('/api/communities'); setCommunities(await res.json()); } catch (err) {} }; useEffect(() => { fetchCommunities(); }, []); return ( <aside className="w-full lg:w-80 flex-shrink-0"> <div className="space-y-4"> {user && <CreateCommunity onCommunityCreated={fetchCommunities} />} <div className="bg-gray-800 p-4 rounded-lg"> <h3 className="font-bold text-white mb-2">Communities</h3> <ul> {communities.map(community => ( <li key={community.name}> <Link to={`/c/${community.name}`} className="text-orange-400 hover:underline">c/{community.name}</Link> </li> ))} </ul> </div> </div> </aside> );}
export default Sidebar;
