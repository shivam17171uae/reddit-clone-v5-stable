import React, { useState } from 'react'; import { useAuth } from '../context/AuthContext';
function AuthModal({ onClose }) { const [isLogin, setIsLogin] = useState(true); const [username, setUsername] = useState(''); const [password, setPassword] = useState(''); const [error, setError] = useState(''); const { login } = useAuth(); const handleSubmit = async (e) => { e.preventDefault(); setError(''); const endpoint = isLogin ? '/api/auth/login' : '/api/auth/register'; try { const response = await fetch(endpoint, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ username, password }), }); if (!response.ok) { const errorData = await response.text(); throw new Error(errorData || 'An error occurred'); } if (isLogin) { const data = await response.json(); login(data.token); onClose(); } else { alert('Registration successful! Please log in.'); setIsLogin(true); } } catch (err) { setError(err.message); } }; return ( <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50"> <div className="bg-gray-800 p-8 rounded-lg shadow-xl w-full max-w-md relative"> <button onClick={onClose} className="absolute top-4 right-4 text-gray-400 hover:text-white text-2xl">&times;</button> <h2 className="text-2xl font-bold text-center text-white mb-6">{isLogin ? 'Login' : 'Sign Up'}</h2> <form onSubmit={handleSubmit}> {error && <p className="bg-red-500 text-white p-2 rounded mb-4 text-sm">{error}</p>} <input type="text" placeholder="Username" value={username} onChange={(e) => setUsername(e.target.value)} className="w-full bg-gray-700 text-white p-3 rounded mb-4" required /> <input type="password" placeholder="Password" value={password} onChange={(e) => setPassword(e.target.value)} className="w-full bg-gray-700 text-white p-3 rounded mb-6" required /> <button type="submit" className="w-full bg-orange-600 hover:bg-orange-700 text-white font-bold py-3 px-4 rounded">{isLogin ? 'Login' : 'Create Account'}</button> </form> <p className="text-center text-gray-400 mt-4"> {isLogin ? "Don't have an account?" : "Already have an account?"} <button type="button" onClick={() => setIsLogin(!isLogin)} className="text-orange-500 hover:underline ml-2">{isLogin ? 'Sign Up' : 'Login'}</button> </p> </div> </div> );}
export default AuthModal;
